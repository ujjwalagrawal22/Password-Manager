(function(){"use strict";function l(){return Array.from(document.querySelectorAll('input[type="password"]'))}function a(e){if(!e.form)return null;const t=["input[type='email']","input[type='text']","input[autocomplete='username']"];for(const r of t){const n=e.form.querySelector(r);if(n)return n}return null}function c(e){const t=l();if(!t.length||!e.length){console.log("Autofill UI: No password fields found or no credentials.");return}const r=e[0],n=t[0],o=a(n);if(!o){console.warn("Autofill UI: Could not find a suitable username field associated with the password field.");return}if(!n){console.warn("Autofill UI: Password field not found, despite passwordFields.length > 0. This is unexpected.");return}if(!o.parentElement.classList.contains("pwm-input-wrapper")){const d=document.createElement("div");d.className="pwm-input-wrapper",o.parentNode.insertBefore(d,o),d.appendChild(o)}const s=document.createElement("div");s.className="pwm-autofill-icon",s.title="Autofill with your saved credentials",s.addEventListener("click",d=>{d.preventDefault(),d.stopPropagation(),o.value=r.username,n.value=r.password,o.dispatchEvent(new Event("input",{bubbles:!0})),o.dispatchEvent(new Event("change",{bubbles:!0})),n.dispatchEvent(new Event("input",{bubbles:!0})),n.dispatchEvent(new Event("change",{bubbles:!0})),console.log("Autofill: Values set. Username:",o.value,"Password (length):",n.value.length),s.style.display="none"}),o.parentElement.appendChild(s),console.log("Autofill UI: Icon attached to username field wrapper.")}function u(e){if(document.getElementById("pwm-save-prompt"))return;const t=document.createElement("div");t.id="pwm-save-prompt",t.style.cssText=`
    position: fixed; top: 20px; right: 20px; background-color: #fff;
    border: 1px solid #ccc; border-radius: 8px; padding: 16px; z-index: 9999;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1); font-family: sans-serif;
    font-size: 14px;
  `;let r=`
    <div style="font-weight: bold; margin-bottom: 10px;">Save to your Vault?</div>
    <div style="margin-bottom: 5px;"><strong>Username:</strong> ${e.username}</div>
    <div style="margin-bottom: 15px;"><strong>URL:</strong> ${new URL(e.url).hostname}</div>
    <div style="display: flex; justify-content: flex-end; gap: 10px;">
      <button id="pwm-close-btn" style="padding: 8px 12px; border: 1px solid #ccc; background: #f7f7f7; border-radius: 4px; cursor: pointer;">Close</button>
      <button id="pwm-save-btn" style="padding: 8px 12px; border: none; background: #0d6efd; color: white; border-radius: 4px; cursor: pointer;">Save</button>
    </div>
  `;t.innerHTML=r,document.body.appendChild(t),document.getElementById("pwm-save-btn").addEventListener("click",()=>{chrome.runtime.sendMessage({type:"SAVE_CREDENTIALS",data:e}),t.innerHTML='<div style="color: #198754; font-weight: bold;">âœ… Saved to Vault!</div>',setTimeout(()=>{t.remove()},2e3)}),document.getElementById("pwm-close-btn").addEventListener("click",()=>{t.remove()})}function p(e){const t=e.target,r=t.form;if(!r||r.dataset.pwmCaptured)return;const n=t.value,o=a(t),s=o?o.value:"",d=window.location.href;n&&s?(r.dataset.pwmCaptured="true",console.log("Password Captured: Sending to background for URL:",d),chrome.runtime.sendMessage({type:"PASSWORD_CAPTURED",data:{password:n,username:s,url:d}})):console.log("Password Captured: Username or password not found or empty. Username:",s,"Password present:",!!n)}chrome.runtime.onMessage.addListener((e,t,r)=>{e.type==="PROMPT_TO_SAVE_PASSWORD"&&(console.log("Content Script: Received PROMPT_TO_SAVE_PASSWORD message.",e.data),u(e.data))}),window.addEventListener("load",()=>{console.log("Content Script: Window loaded, requesting credentials for autofill."),chrome.runtime.sendMessage({type:"GET_CREDENTIALS_FOR_URL",url:window.location.href},e=>{e.success&&e.data&&e.data.length>0?(console.log("Content Script: Found credentials for this site:",e.data),c(e.data)):e.success&&e.data&&e.data.length===0?console.log("Content Script: No credentials found for this site."):console.error("Content Script: Error getting credentials:",e.error)})});function i(){document.querySelectorAll("form").forEach(e=>{e.dataset.pwmListenerAttached||(e.addEventListener("submit",()=>{const t=e.querySelector('input[type="password"]');t&&p({target:t})}),e.dataset.pwmListenerAttached="true")})}i(),new MutationObserver(i).observe(document.body,{childList:!0,subtree:!0})})();
